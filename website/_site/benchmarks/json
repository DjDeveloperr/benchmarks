<head><meta name="viewport" content="width=device-width, initial-scale=1.0"/><meta charset="UTF-8"/><link href="/windi.css" rel="stylesheet"/><link href="/assets/main.css" rel="stylesheet"/><link href="/assets/gfm.css" rel="stylesheet"/><script src="https://cdn.jsdelivr.net/npm/apexcharts"></script></head><body class="bg-gray-50"><main><div class="min-h-full"><div class="mb-12"><div class="section-x-inset-md mt-8 pb-8"><div><p><img src="/assets/hyro_blob.png" class="mb-12 w-32 h-32"/><h4 class="text-2xl font-bold tracking-tight">Benchmarks</h4></p>
<p class="mt-4 bg-gray-100">
Here, you can see <span class="text-sky-600">json</span> benchmark results.
</p>
<p><div class="mt-12 pt-1"><h4 class="text-2xl font-bold tracking-tight">Categories</h4><ul class="ml-8 list-disc my-2"><li><a class="link" href="/" type="">../</a></li><li><a class="link" href="/benchmarks/sqlite" type="">sqlite</a></li><li><a class="link" href="/benchmarks/json" type="">json</a></li><li><a class="link" href="/benchmarks/nanoid" type="">nanoid</a></li><li><a class="link" href="/benchmarks/base64" type="">base64</a></li><li><a class="link" href="/benchmarks/http" type="">http</a></li><li><a class="link" href="/benchmarks/console" type="">console</a></li></ul></div></p>
<div class="mt-12 pt-1">
<h4 class="text-2xl font-bold tracking-tight"><a name="json-parse">Parse</a></h4>
<br /><h4 class="text-3xl font-bold tracking-tight"><a name="json-parse-python">Python</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Python</td>
<td>22.98/iter ms</td>
<td>22.55 ms</td>
<td>23.81 ms</td>
<td>22.71 ms</td>
<td>22.95 ms</td>
</tr>
</tbody>
</table>
<div id="chart-5"></div>
<script>
new ApexCharts(document.querySelector('#chart-5'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Python","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22983180.399999995]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["f12f7bb","ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-parse-crystal">Crystal</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Crystal</td>
<td>2.17/iter ms</td>
<td>1.95 ms</td>
<td>2.79 ms</td>
<td>2.01 ms</td>
<td>1.98 ms</td>
</tr>
</tbody>
</table>
<div id="chart-6"></div>
<script>
new ApexCharts(document.querySelector('#chart-6'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Crystal","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2172557.0000000014]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["f12f7bb","ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-parse-javascript">JavaScript</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>JavaScript /  bun 0.1.10 (x64-linux)</td>
<td>14.31/iter ms</td>
<td>13 ms</td>
<td>16.27 ms</td>
<td>14.59 ms</td>
<td>14.04 ms</td>
</tr>
<tr>
<td>JavaScript /  deno 1.25.0 (x64-linux)</td>
<td>28.52/iter ms</td>
<td>27.1 ms</td>
<td>31.47 ms</td>
<td>27.12 ms</td>
<td>29.53 ms</td>
</tr>
<tr>
<td>JavaScript /  node 18.8.0 (x64-linux)</td>
<td>47.65/iter ms</td>
<td>45.54 ms</td>
<td>50.63 ms</td>
<td>47.23 ms</td>
<td>46.66 ms</td>
</tr>
</tbody>
</table>
<div id="chart-7"></div>
<script>
new ApexCharts(document.querySelector('#chart-7'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":" bun 0.1.10 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14305661.27]},{"name":" node 18.8.0 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47646932.6]},{"name":" deno 1.25.0 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28516616.509999994]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["f12f7bb","ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-parse-ruby">Ruby</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ruby</td>
<td>61.78/iter ms</td>
<td>60.5 ms</td>
<td>63 ms</td>
<td>61.02 ms</td>
<td>62.22 ms</td>
</tr>
</tbody>
</table>
<div id="chart-8"></div>
<script>
new ApexCharts(document.querySelector('#chart-8'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Ruby","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61778569.99999998]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["f12f7bb","ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-parse-go">Go</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Go</td>
<td>1.16/iter ms</td>
<td>957.66 µs</td>
<td>1.87 ms</td>
<td>1.42 ms</td>
<td>1.21 ms</td>
</tr>
</tbody>
</table>
<div id="chart-9"></div>
<script>
new ApexCharts(document.querySelector('#chart-9'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Go","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1157462.4900000005]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["f12f7bb","ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-2xl font-bold tracking-tight"><a name="json-stringify">Stringify</a></h4>
<br /><h4 class="text-3xl font-bold tracking-tight"><a name="json-stringify-python">Python</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Python</td>
<td>23.22/iter ms</td>
<td>22.61 ms</td>
<td>24.05 ms</td>
<td>22.79 ms</td>
<td>22.86 ms</td>
</tr>
</tbody>
</table>
<div id="chart-10"></div>
<script>
new ApexCharts(document.querySelector('#chart-10'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Python","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23220252.400000002]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["f12f7bb","ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-stringify-crystal">Crystal</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Crystal</td>
<td>2.16/iter ms</td>
<td>1.93 ms</td>
<td>2.65 ms</td>
<td>1.99 ms</td>
<td>2.07 ms</td>
</tr>
</tbody>
</table>
<div id="chart-11"></div>
<script>
new ApexCharts(document.querySelector('#chart-11'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Crystal","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2162303.099999999]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["f12f7bb","ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-stringify-javascript">JavaScript</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>JavaScript /  bun 0.1.10 (x64-linux)</td>
<td>14.49/iter ms</td>
<td>13 ms</td>
<td>16.28 ms</td>
<td>14.19 ms</td>
<td>14.34 ms</td>
</tr>
<tr>
<td>JavaScript /  deno 1.25.0 (x64-linux)</td>
<td>28.91/iter ms</td>
<td>27.09 ms</td>
<td>32.59 ms</td>
<td>28.39 ms</td>
<td>28.75 ms</td>
</tr>
<tr>
<td>JavaScript /  node 18.8.0 (x64-linux)</td>
<td>47.9/iter ms</td>
<td>45.94 ms</td>
<td>52.21 ms</td>
<td>47.97 ms</td>
<td>47.98 ms</td>
</tr>
</tbody>
</table>
<div id="chart-12"></div>
<script>
new ApexCharts(document.querySelector('#chart-12'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":" bun 0.1.10 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14490841.990000008]},{"name":" node 18.8.0 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47896446.910000004]},{"name":" deno 1.25.0 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28908635.320000004]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["f12f7bb","ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-stringify-ruby">Ruby</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ruby</td>
<td>61.95/iter ms</td>
<td>60.58 ms</td>
<td>63.5 ms</td>
<td>61.1 ms</td>
<td>62.05 ms</td>
</tr>
</tbody>
</table>
<div id="chart-13"></div>
<script>
new ApexCharts(document.querySelector('#chart-13'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Ruby","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61947716.470000006]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["f12f7bb","ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-stringify-go">Go</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Go</td>
<td>1.15/iter ms</td>
<td>1 ms</td>
<td>1.79 ms</td>
<td>1.09 ms</td>
<td>1.14 ms</td>
</tr>
</tbody>
</table>
<div id="chart-14"></div>
<script>
new ApexCharts(document.querySelector('#chart-14'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Go","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1151811.1800000009]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["f12f7bb","ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
</div>
</div></div></div></div></main></body>