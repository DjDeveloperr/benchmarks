<head><meta name="viewport" content="width=device-width, initial-scale=1.0"/><meta charset="UTF-8"/><link href="/windi.css" rel="stylesheet"/><link href="/assets/main.css" rel="stylesheet"/><link href="/assets/gfm.css" rel="stylesheet"/><script src="https://cdn.jsdelivr.net/npm/apexcharts"></script></head><body class="bg-gray-50"><main><div class="min-h-full"><div class="mb-12"><div class="section-x-inset-md mt-8 pb-8"><div><p><img src="/assets/hyro_blob.png" class="mb-12 w-32 h-32"/><h4 class="text-2xl font-bold tracking-tight">Benchmarks</h4></p>
<p class="mt-4 bg-gray-100">
Here, you can see <span class="text-sky-100">json</span> benchmark results.
</p>
<p><div class="mt-12 pt-1"><h4 class="text-2xl font-bold tracking-tight">Categories</h4><ul class="ml-8 list-disc my-2"><li><a class="link" href="/benchmarks/sqlite" type="">sqlite</a></li><li><a class="link" href="/benchmarks/json" type="">json</a></li><li><a class="link" href="/benchmarks/nanoid" type="">nanoid</a></li><li><a class="link" href="/benchmarks/base64" type="">base64</a></li><li><a class="link" href="/benchmarks/http" type="">http</a></li><li><a class="link" href="/benchmarks/console" type="">console</a></li></ul></div></p>
<div class="mt-12 pt-1">
<h4 class="text-2xl font-bold tracking-tight"><a name="json-parse">Parse</a></h4>
<br /><h4 class="text-3xl font-bold tracking-tight"><a name="json-parse-python">Python</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Python</td>
<td>33.43/iter ms</td>
<td>30.38 ms</td>
<td>42.81 ms</td>
<td>32.72 ms</td>
<td>33.95 ms</td>
</tr>
</tbody>
</table>
<div id="chart-5"></div>
<script>
new ApexCharts(document.querySelector('#chart-5'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Python","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33425406.269999985]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-parse-crystal">Crystal</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Crystal</td>
<td>2.86/iter ms</td>
<td>2.13 ms</td>
<td>7.29 ms</td>
<td>2.65 ms</td>
<td>2.4 ms</td>
</tr>
</tbody>
</table>
<div id="chart-6"></div>
<script>
new ApexCharts(document.querySelector('#chart-6'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Crystal","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2863091.420000001]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-parse-javascript">JavaScript</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>JavaScript /  bun 0.1.10 (x64-linux)</td>
<td>19.06/iter ms</td>
<td>15.34 ms</td>
<td>27.69 ms</td>
<td>18.6 ms</td>
<td>19.79 ms</td>
</tr>
<tr>
<td>JavaScript /  deno 1.25.0 (x64-linux)</td>
<td>37.68/iter ms</td>
<td>32.95 ms</td>
<td>43.38 ms</td>
<td>38.42 ms</td>
<td>37.65 ms</td>
</tr>
<tr>
<td>JavaScript /  node 18.8.0 (x64-linux)</td>
<td>62.28/iter ms</td>
<td>55.94 ms</td>
<td>69.63 ms</td>
<td>60.84 ms</td>
<td>61.35 ms</td>
</tr>
</tbody>
</table>
<div id="chart-7"></div>
<script>
new ApexCharts(document.querySelector('#chart-7'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":" bun 0.1.10 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19064541.939999998]},{"name":" node 18.8.0 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62281744.95999998]},{"name":" deno 1.25.0 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37681628.730000004]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-parse-ruby">Ruby</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ruby</td>
<td>85.48/iter ms</td>
<td>77.35 ms</td>
<td>99.62 ms</td>
<td>85.89 ms</td>
<td>84.33 ms</td>
</tr>
</tbody>
</table>
<div id="chart-8"></div>
<script>
new ApexCharts(document.querySelector('#chart-8'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Ruby","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85482609.95000006]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-parse-go">Go</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Go</td>
<td>1.62/iter ms</td>
<td>997.01 µs</td>
<td>6.12 ms</td>
<td>1.37 ms</td>
<td>3.54 ms</td>
</tr>
</tbody>
</table>
<div id="chart-9"></div>
<script>
new ApexCharts(document.querySelector('#chart-9'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Go","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1624389.1799999997]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-2xl font-bold tracking-tight"><a name="json-stringify">Stringify</a></h4>
<br /><h4 class="text-3xl font-bold tracking-tight"><a name="json-stringify-python">Python</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Python</td>
<td>32.65/iter ms</td>
<td>29.33 ms</td>
<td>41.53 ms</td>
<td>32.06 ms</td>
<td>31.28 ms</td>
</tr>
</tbody>
</table>
<div id="chart-10"></div>
<script>
new ApexCharts(document.querySelector('#chart-10'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Python","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32649509.349999987]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-stringify-crystal">Crystal</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Crystal</td>
<td>2.73/iter ms</td>
<td>2.09 ms</td>
<td>8.44 ms</td>
<td>3.13 ms</td>
<td>2.59 ms</td>
</tr>
</tbody>
</table>
<div id="chart-11"></div>
<script>
new ApexCharts(document.querySelector('#chart-11'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Crystal","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2731032.2100000004]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-stringify-javascript">JavaScript</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>JavaScript /  bun 0.1.10 (x64-linux)</td>
<td>19.99/iter ms</td>
<td>17.12 ms</td>
<td>28.14 ms</td>
<td>20.95 ms</td>
<td>22.79 ms</td>
</tr>
<tr>
<td>JavaScript /  deno 1.25.0 (x64-linux)</td>
<td>38.4/iter ms</td>
<td>34.75 ms</td>
<td>45.66 ms</td>
<td>38.35 ms</td>
<td>41.5 ms</td>
</tr>
<tr>
<td>JavaScript /  node 18.8.0 (x64-linux)</td>
<td>63.96/iter ms</td>
<td>59.18 ms</td>
<td>76.62 ms</td>
<td>66.85 ms</td>
<td>64.21 ms</td>
</tr>
</tbody>
</table>
<div id="chart-12"></div>
<script>
new ApexCharts(document.querySelector('#chart-12'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":" bun 0.1.10 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19993534.529999994]},{"name":" node 18.8.0 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63958000.29000004]},{"name":" deno 1.25.0 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38396758.06]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-stringify-ruby">Ruby</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ruby</td>
<td>85.24/iter ms</td>
<td>78.54 ms</td>
<td>100.13 ms</td>
<td>100.13 ms</td>
<td>81.94 ms</td>
</tr>
</tbody>
</table>
<div id="chart-13"></div>
<script>
new ApexCharts(document.querySelector('#chart-13'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Ruby","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85242737.7]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="json-stringify-go">Go</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Go</td>
<td>1.8/iter ms</td>
<td>1.25 ms</td>
<td>7.68 ms</td>
<td>1.31 ms</td>
<td>2.01 ms</td>
</tr>
</tbody>
</table>
<div id="chart-14"></div>
<script>
new ApexCharts(document.querySelector('#chart-14'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Go","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1804508.9400000004]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
</div>
</div></div></div></div></main></body>