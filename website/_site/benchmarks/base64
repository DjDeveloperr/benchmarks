<head><meta name="viewport" content="width=device-width, initial-scale=1.0"/><meta charset="UTF-8"/><link href="/windi.css" rel="stylesheet"/><link href="/assets/main.css" rel="stylesheet"/><link href="/assets/gfm.css" rel="stylesheet"/><script src="https://cdn.jsdelivr.net/npm/apexcharts"></script></head><body class="bg-gray-50"><main><div class="min-h-full"><div class="mb-12"><div class="section-x-inset-md mt-8 pb-8"><div><p><img src="/assets/hyro_blob.png" class="mb-12 w-32 h-32"/><h4 class="text-2xl font-bold tracking-tight">Benchmarks</h4></p>
<p class="mt-4 bg-gray-100">
Here, you can see <span class="text-sky-100">base64</span> benchmark results.
</p>
<p><div class="mt-12 pt-1"><h4 class="text-2xl font-bold tracking-tight">Categories</h4><ul class="ml-8 list-disc my-2"><li><a class="link" href="/benchmarks/sqlite" type="">sqlite</a></li><li><a class="link" href="/benchmarks/json" type="">json</a></li><li><a class="link" href="/benchmarks/nanoid" type="">nanoid</a></li><li><a class="link" href="/benchmarks/base64" type="">base64</a></li><li><a class="link" href="/benchmarks/http" type="">http</a></li><li><a class="link" href="/benchmarks/console" type="">console</a></li></ul></div></p>
<div class="mt-12 pt-1">
<h4 class="text-2xl font-bold tracking-tight"><a name="base64-encode">Encode</a></h4>
<br /><h4 class="text-3xl font-bold tracking-tight"><a name="base64-encode-python">Python</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Python</td>
<td>31.85/iter ms</td>
<td>28.98 ms</td>
<td>39.89 ms</td>
<td>31.97 ms</td>
<td>32.92 ms</td>
</tr>
</tbody>
</table>
<div id="chart-17"></div>
<script>
new ApexCharts(document.querySelector('#chart-17'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Python","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31848128.929999996]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="base64-encode-crystal">Crystal</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Crystal</td>
<td>3.03/iter ms</td>
<td>2.14 ms</td>
<td>7.12 ms</td>
<td>2.71 ms</td>
<td>3.52 ms</td>
</tr>
</tbody>
</table>
<div id="chart-18"></div>
<script>
new ApexCharts(document.querySelector('#chart-18'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Crystal","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3032221.340000001]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="base64-encode-javascript">JavaScript</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>JavaScript /  bun 0.1.10 (x64-linux)</td>
<td>20.88/iter ms</td>
<td>17.19 ms</td>
<td>28.34 ms</td>
<td>19.9 ms</td>
<td>20.94 ms</td>
</tr>
<tr>
<td>JavaScript /  deno 1.25.0 (x64-linux)</td>
<td>38.39/iter ms</td>
<td>34.44 ms</td>
<td>48.38 ms</td>
<td>41.93 ms</td>
<td>35.78 ms</td>
</tr>
<tr>
<td>JavaScript /  node 18.8.0 (x64-linux)</td>
<td>63.78/iter ms</td>
<td>58.11 ms</td>
<td>70.97 ms</td>
<td>63.46 ms</td>
<td>61.55 ms</td>
</tr>
</tbody>
</table>
<div id="chart-19"></div>
<script>
new ApexCharts(document.querySelector('#chart-19'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":" bun 0.1.10 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20875503.310000006]},{"name":" node 18.8.0 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63778312.610000014]},{"name":" deno 1.25.0 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38385795.82]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="base64-encode-ruby">Ruby</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ruby</td>
<td>78.78/iter ms</td>
<td>71.9 ms</td>
<td>94.4 ms</td>
<td>75.48 ms</td>
<td>80.41 ms</td>
</tr>
</tbody>
</table>
<div id="chart-20"></div>
<script>
new ApexCharts(document.querySelector('#chart-20'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Ruby","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78778054.14000002]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="base64-encode-go">Go</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Go</td>
<td>1.37/iter ms</td>
<td>848.87 µs</td>
<td>5.16 ms</td>
<td>1.29 ms</td>
<td>1.69 ms</td>
</tr>
</tbody>
</table>
<div id="chart-21"></div>
<script>
new ApexCharts(document.querySelector('#chart-21'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Go","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1369357.8099999998]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-2xl font-bold tracking-tight"><a name="base64-decode">Decode</a></h4>
<br /><h4 class="text-3xl font-bold tracking-tight"><a name="base64-decode-python">Python</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Python</td>
<td>32.5/iter ms</td>
<td>28.73 ms</td>
<td>43.79 ms</td>
<td>29.92 ms</td>
<td>31.68 ms</td>
</tr>
</tbody>
</table>
<div id="chart-22"></div>
<script>
new ApexCharts(document.querySelector('#chart-22'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Python","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32495874.680000007]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="base64-decode-crystal">Crystal</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Crystal</td>
<td>2.83/iter ms</td>
<td>2.14 ms</td>
<td>8.47 ms</td>
<td>2.92 ms</td>
<td>2.57 ms</td>
</tr>
</tbody>
</table>
<div id="chart-23"></div>
<script>
new ApexCharts(document.querySelector('#chart-23'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Crystal","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2832257.500000002]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="base64-decode-javascript">JavaScript</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>JavaScript /  bun 0.1.10 (x64-linux)</td>
<td>20.83/iter ms</td>
<td>17.87 ms</td>
<td>34.24 ms</td>
<td>24.43 ms</td>
<td>19.23 ms</td>
</tr>
<tr>
<td>JavaScript /  deno 1.25.0 (x64-linux)</td>
<td>38.71/iter ms</td>
<td>34.37 ms</td>
<td>48.92 ms</td>
<td>38.62 ms</td>
<td>37.1 ms</td>
</tr>
<tr>
<td>JavaScript /  node 18.8.0 (x64-linux)</td>
<td>65.89/iter ms</td>
<td>59.66 ms</td>
<td>85.41 ms</td>
<td>64.35 ms</td>
<td>64.3 ms</td>
</tr>
</tbody>
</table>
<div id="chart-24"></div>
<script>
new ApexCharts(document.querySelector('#chart-24'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":" bun 0.1.10 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20826257.449999996]},{"name":" node 18.8.0 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65892142.419999994]},{"name":" deno 1.25.0 (x64-linux)","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38714651.62000002]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="base64-decode-ruby">Ruby</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ruby</td>
<td>79.75/iter ms</td>
<td>71.38 ms</td>
<td>87.89 ms</td>
<td>77.5 ms</td>
<td>83.97 ms</td>
</tr>
</tbody>
</table>
<div id="chart-25"></div>
<script>
new ApexCharts(document.querySelector('#chart-25'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Ruby","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79750509.58000001]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
<h4 class="text-3xl font-bold tracking-tight"><a name="base64-decode-go">Go</a></h4>
<table>
<thead>
<tr>
<th>Language</th>
<th>Average</th>
<th>p75</th>
<th>p99</th>
<th>Min</th>
<th>Max</th>
</tr>
</thead>
<tbody>
<tr>
<td>Go</td>
<td>1.29/iter ms</td>
<td>689.88 µs</td>
<td>2.56 ms</td>
<td>1.01 ms</td>
<td>1.74 ms</td>
</tr>
</tbody>
</table>
<div id="chart-26"></div>
<script>
new ApexCharts(document.querySelector('#chart-26'), {
                        chart: {
                            height: 320,
                            type: 'line',
                            toolbar: {
                                show: true,
                            },
                            animations: {
                                enabled: true,
                            },
                        },
                        series: [{"name":"Go","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1294967.219999999]}],
                        stroke: {
                            width: 1,
                            curve: "straight",
                        },
                        legend: {
                            show: true,
                            showForSingleSeries: true,
                            position: "bottom",
                        },
                        yaxis: {
                            labels: {
                                formatter: function (v) {
const time = v;
const locale = 'en-US';
const type = '/iter';
if (time < 1e0) return `${Number((time * 1e3).toFixed(2)).toLocaleString(locale)}${type} ps`;
if (time < 1e3) return `${Number(time.toFixed(2)).toLocaleString(locale)}${type} ns`;
if (time < 1e6) return `${Number((time / 1e3).toFixed(2)).toLocaleString(locale)}${type} µs`;
if (time < 1e9) return `${Number((time / 1e6).toFixed(2)).toLocaleString(locale)}${type} ms`;
if (time < 1e12) return `${Number((time / 1e9).toFixed(2)).toLocaleString(locale)}${type} s`;
if (time < 36e11) return `${Number((time / 60e9).toFixed(2)).toLocaleString(locale)}${type} m`;
return `${Number((time / 36e11).toFixed(2)).toLocaleString(locale)}${type} h`;
}
                            },
                            title: {
                                text: "time per iteration"
                            },
                        },
                        xaxis: {
                            categories: ["ae1b26b","d9eb378","1220af9","f749858","c17fc69","d2c6ac7","89e8f77","3828643","d3194b4","00d24dd","ff55f3d","2feb9a5","c434a6d","6e218ab","ff3683a","3ee7b8c","4003018","d53b782","5bb06d6","Latest"],
                            labels: {
                                show: false,
                            },
                            tooltip: {
                                enabled: false,
                            },
                        },
                        plotOptions: {
                            bar: {
                                distributed: true
                            }
                        }
                    }).render()
</script>
</div>
</div></div></div></div></main></body>